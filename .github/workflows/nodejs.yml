# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Linting and Tests

on:
  # push:
  #   branches: [ develop, experimental, master ]
  pull_request:
    branches: [ develop, experimental, master ]

jobs:
  bundle:
    name: NPM Install, Lint, Shellcheck
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      id: cache-modules
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-        
    - name: NPM Install
      run: |
        npm ci --no-optional
        npm rebuild node-sass
    - name: Lint
      run: npm run lint
    - name: Shellcheck
      run: ./run-shellcheck.sh

  api_test:
    name: Web API Test
    needs: bundle
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      id: cache-modules
      with:
        path: |
          **/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: NPM Install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        npm ci --no-optional
        npm rebuild node-sass

    - name: Web API - Test
      run: npm run test:api:ci

  shared_test:
    name: Shared Test
    needs: bundle
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      id: cache-modules
      with:
        path: |
          **/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: NPM Install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        npm ci --no-optional
        npm rebuild node-sass
    - name: Shared - Test
      run: npm run test:shared:ci

  unit_test:
    name: Web Client - Unit Test
    needs: bundle
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      id: cache-modules
      with:
        path: |
          **/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: NPM Install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        npm ci --no-optional
        npm rebuild node-sass
    - name: Web Client - Unit Test
      run: npm run test:client:unit:ci

  pa11y_test:
    name: Web Client - Pa11y tests
    needs: bundle
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      id: cache-modules
      with:
        path: |
          **/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: NPM Install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        npm ci --no-optional
        npm rebuild node-sass
    - name: Setup DynamoDB Local
      uses: rrainn/dynamodb-action@v2.0.0
      with:
        dbPath: ./
        optimizeDbBeforeStartup: true
        sharedDb: true
        port: 8000
        cors: '*'
    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144
    - name: Start elasticsearch
      uses: getong/elasticsearch-action@v1.2
      with:
        elasticsearch version: '7.5.2'
        host port: 9200
        container port: 9200
        host node port: 9300
        node port: 9300
        discovery type: 'single-node'
    - name: Build application
      run: |
        npm run build:assets
        mkdir -p web-api/dist
        npm run build:client
    - name: Start API
      env:
        SKIP_CACHE_INVALIDATION: "true"
        AWS_ACCESS_KEY_ID: "noop"
        AWS_SECRET_ACCESS_KEY: "noop"
      run: |
        npm run start:api:ci &
        ./wait-until.sh http://localhost:4000/api/swagger
        ./wait-until-services.sh
    - name: Start Clients
      env:
        SKIP_CACHE_INVALIDATION: "true"
        AWS_ACCESS_KEY_ID: "noop"
        AWS_SECRET_ACCESS_KEY: "noop"
      run: |
        npx run-p start:client:ci start:public:ci &
        ./wait-until.sh http://localhost:1234/
        ./wait-until.sh http://localhost:5678/
    - name: Run Pa11y
      run: |    
        npm run test:pa11y:1 --node-flags --max-old-space-size=1024
        npm run test:pa11y:2 --node-flags --max-old-space-size=1024
        npm run test:pa11y:3 --node-flags --max-old-space-size=1024
        npm run test:pa11y:public --node-flags --max-old-space-size=1024
